{"version":3,"sources":["actions/types.js","actions/filters.js","suspend.js","components/Resume/Header.js","components/Tech.js","components/Projects/index.js","components/Education/index.js","filter_types.js","components/Experience/RenderHighlight.js","components/Experience/JobProject.js","components/Experience/index.js","components/Summary/index.js","components/Skills/index.js","components/Filters/index.js","actions/collapsed.js","components/Resume/index.js","reducers/filter_reducer.js","reducers/collapsed_reducer.js","reducers/index.js","index.js"],"names":["SET_COLLAPSED","TOGGLE_COLLAPSED","EXPAND_ALL","COLLAPSE_ALL","SET_SECTION_FILTERS","SET_TECH_FILTERS","SET_TECH_ORDER","setTechFilters","filters","type","payload","suspend","promise","result","status","suspender","then","response","error","Header","contact","className","title","name","subTitle","blurb","extra","href","phone","email","React","memo","Tech","tech","length","join","Title","Typography","Text","Projects","projects","collapsed","collapseCallback","filteredProjects","filter","project","some","t","includes","size","level","dataSource","renderItem","Item","Meta","onClick","id","strong","url","e","stopPropagation","target","rel","date","description","Education","schools","school","location","results","PROJECT_BLURBS","SUMMARY","SKILLS","EXPERIENCE","OTHER_PROJECTS","EDUCATION","NonMemoRenderTech","RenderTech","NonMemoRenderHighlight","highlight","RenderHighlight","JobProject","sections","project_name","Fragment","role","members","map","style","listStyle","highlights","i","Experience","experience","tech_filters","job","color","duration","to","undefined","employer","from","Summary","summary","p","NonMemoSkillDuration","skill","since","Date","getFullYear","SkillDuration","NonMemoRenderSkillSet","set","cat","filteredItems","items","item","header","label","RenderSkillSet","Skills","skills","professional","additional","Option","Select","Filters","useSelector","state","section_order","section_filters","tech_order","dispatch","useDispatch","mode","allowClear","placeholder","defaultValue","onChange","setSectionFilters","width","section","suspendedFetchResume","fetch","res","json","getGridColumns","NonMemoResume","resume","c","useEffect","order","Object","keys","active_tech_filters","newCollapsed","forEach","other","setCollapsed","useMemo","toggleCollapsed","section_mapping","education","Resume","NonMemoResumeRetriever","fallback","active","types","INITIAL","s","rootReducer","combineReducers","action","reduce","acc","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"sVAAaA,G,OAAgB,iBAChBC,EAAmB,mBACnBC,EAAa,aACbC,EAAe,eAEfC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAiB,iBCAjBC,EAAiB,SAACC,GAAD,MAAc,CAC1CC,KAAMJ,EACNK,QAAS,CAAEF,aCiBEG,EA1BC,SAACC,GACf,IAAIC,EAAS,KACTC,EAAS,UACPC,EAAYH,EAAQI,MACxB,SAACC,GACCH,EAAS,UACTD,EAASI,KAEX,SAACC,GACCJ,EAAS,QACTD,EAASK,KAIb,OAAO,WACL,OAAQJ,GACN,IAAK,UACH,MAAMC,EACR,IAAK,QACH,MAAMF,EACR,QACE,OAAOA,K,wBCjBTM,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACb,qCACE,cAAC,IAAD,CACEC,UAAU,qBACVC,MAAOF,EAAQG,KACfC,SAAUJ,EAAQK,MAClBC,MAAO,CACL,cAAC,IAAD,CAAoBC,KAAMP,EAAQQ,MAAlC,SACGR,EAAQQ,OADC,SAGZ,cAAC,IAAD,CAAoBD,KAAI,iBAAYP,EAAQS,OAASpB,KAAK,UAA1D,SACGW,EAAQS,OADC,YAKhB,qBAAKR,UAAU,eAAf,SACE,gCACE,qBAAKA,UAAU,aAAf,SAA6BD,EAAQG,OACrC,qBAAKF,UAAU,cAAf,SAA8BD,EAAQQ,QACtC,qBAAKP,UAAU,cAAf,SAA8BD,EAAQS,iBAQ/BC,MAAMC,KAAKZ,G,2BC5BpBa,EAAO,SAAC,GAAmB,IAAD,IAAhBC,YAAgB,MAAT,GAAS,EAC9B,OAAKA,EAAKC,OAIR,mDAEE,sBAAMb,UAAU,OAAhB,SAAwBY,EAAKE,KAAK,WAL7B,MAYIL,MAAMC,KAAKC,GCTlBI,G,OAAgBC,IAAhBD,OAAOE,EAASD,IAATC,KAETC,EAAW,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUhC,EAA2C,EAA3CA,QAASiC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,iBAC1CC,EAAmBH,EAASI,QAChC,SAACC,GAAD,OACGrC,EAAQ0B,SACRW,EAAQZ,MACTY,EAAQZ,KAAKa,MAAK,SAACC,GAAD,OAAOvC,EAAQwC,SAASD,SAG9C,OAAKJ,EAAiBT,OAIpB,cAAC,IAAD,CAAMe,KAAK,QAAQ3B,MAAO,cAACc,EAAD,CAAOc,MAAO,EAAd,sBAA1B,SACE,cAAC,IAAD,CACEC,WAAYR,EACZS,WAAY,SAACP,GAAD,OACV,cAAC,IAAKQ,KAAN,UACE,cAAC,IAAKA,KAAKC,KAAX,CACEhC,MACE,sBACED,UAAU,oBACVkC,QAAS,WACPb,EAAiBG,EAAQW,KAH7B,UAME,sBAAMnC,UAAU,eAAhB,SACE,cAACiB,EAAD,CAAMmB,QAAM,EAAZ,SAAcZ,EAAQtB,SAEvBsB,EAAQa,KACP,mBACE/B,KAAMkB,EAAQa,IACdH,QAAS,SAACI,GAAD,OAAOA,EAAEC,mBAClBC,OAAO,SACPC,IAAI,sBAJN,SAMGjB,EAAQa,MAGb,sBAAMrC,UAAU,OAAhB,SAAwBwB,EAAQkB,UAGpCC,YACE,sCACIvB,EAAUI,EAAQW,KAAO,8BAAMX,EAAQmB,eACvCvB,EAAUI,EAAQW,KAAO,cAAC,EAAD,CAAMvB,KAAMY,EAAQZ,mBAnCtD,MAqDIH,MAAMC,KAAKQ,GClElBH,G,OAAgBC,IAAhBD,OAAOE,EAASD,IAATC,KAET2B,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChB,cAAC,IAAD,CAAMjB,KAAK,QAAQ3B,MAAO,cAAC,EAAD,CAAO4B,MAAO,EAAd,uBAA1B,SACE,cAAC,IAAD,CACEC,WAAYe,EACZd,WAAY,SAACe,GAAD,OACV,cAAC,IAAKd,KAAN,CAAWhC,UAAU,SAArB,SACE,cAAC,IAAKgC,KAAKC,KAAX,CACEhC,MACE,sBAAKD,UAAU,mBAAf,UACE,iCACE,sBAAMA,UAAU,cAAhB,SACE,cAAC,EAAD,CAAMoC,QAAM,EAAZ,SAAcU,EAAOA,WAFzB,KAII,sBAAM9C,UAAU,WAAhB,SAA4B8C,EAAOC,cAEvC,sBAAM/C,UAAU,OAAhB,SAAwB8C,EAAOJ,UAGnCC,YAAaG,EAAOE,kBAYjBvC,MAAMC,KAAKkC,G,SCtCbK,EAAiB,iBAEjBC,EAAU,UACVC,EAAS,SACTC,EAAa,aACbC,EAAiB,iBACjBC,EAAY,YCCnBC,G,MAAoB,SAAC,GAAmB,IAAD,IAAhB3C,YAAgB,MAAT,GAAS,EAC3C,OAAKA,EAAKC,OAKR,qBAAKb,UAAU,mBAAf,SACE,cAAC,EAAD,CAAMY,KAAMA,MALP,OAYL4C,EAAa/C,IAAMC,KAAK6C,GAExBE,EAAyB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAA8B,IAAnBvE,eAAmB,MAAT,GAAS,EAC9D,OACEA,EAAQ0B,QACR6C,EAAU9C,OACT8C,EAAU9C,KAAKa,MAAK,SAACC,GAAD,OAAOvC,EAAQwC,SAASD,MAEtC,KAIP,+BACGgC,EAAUtD,MACX,cAACoD,EAAD,CAAY5C,KAAM8C,EAAU9C,SAFrB8C,EAAUtD,QAcRuD,EAFSlD,IAAMC,KAAK+C,GCvC7BG,EAAa,SAAC,GAOb,IANLpC,EAMI,EANJA,QACAH,EAKI,EALJA,iBACAD,EAII,EAJJA,UACAyC,EAGI,EAHJA,SACA1C,EAEI,EAFJA,SACAhC,EACI,EADJA,QAEM2E,EAAetC,EAAQA,QAC7B,OACE,eAAC,IAAMuC,SAAP,WACE,sBACE/D,UAAU,cAEVkC,QAAS,WACPb,EAAiByC,IAJrB,UAOE,gCACE,sBAAM9D,UAAU,mBAAhB,SAAoC8D,IACpC,sBAAM9D,UAAU,eAAhB,SAAgCwB,EAAQwC,OACxC,uBAAMhE,UAAU,kBAAhB,UAAmCwB,EAAQyC,QAA3C,kBACCzC,EAAQa,KACP,sBAAMrC,UAAU,cAAhB,SACGwB,EAAQa,IAAI6B,KAAI,SAAC7B,GAAD,OACf,oBACE/B,KAAM+B,EACNG,OAAO,SACPC,IAAI,sBAHN,UAMG,IACAJ,IAHIA,WASf,qBAAKrC,UAAU,OAAf,SACE,qBAAKA,UAAU,cAAf,SAA8BwB,EAAQkB,WA5B1C,UAEUoB,EAFV,UA+BC3C,EAAS2C,IAAiBD,EAASZ,IAClC,gCACE,qBAAKjD,UAAU,gBAAf,SAAgCmB,EAAS2C,GAAc1D,QACtDe,EAAS2C,GAAczB,KACtB,8BACE,oBAAI8B,MAAO,CAAEC,UAAW,QAAUpE,UAAU,cAA5C,SACGmB,EAAS2C,GAAczB,IAAI6B,KAAI,SAAC7B,GAC/B,OACE,6BACE,mBAAG/B,KAAM+B,EAAKG,OAAO,SAASC,IAAI,sBAAlC,SACGJ,KAFIA,YAPrB,UAAayB,EAAb,WAmBDtC,EAAQ6C,aAAejD,EAAUI,EAAQA,UACxC,qBAAKxB,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,6BACGwB,EAAQ6C,WAAWH,KAAI,SAACR,EAAWY,GAClC,OACE,cAAC,EAAD,CAEEZ,UAAWA,EACXvE,QAASA,GAFJmF,WANjB,UAA2CR,EAA3C,kBArDiBA,IAkFVrD,MAAMC,KAAKkD,GC1FlB7C,EAAUC,IAAVD,MAEFwD,EAAa,SAAC,GAOb,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,aACAZ,EAII,EAJJA,SACA1C,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACAC,EACI,EADJA,iBAEA,OACE,cAAC,IAAD,CAAMO,KAAK,QAAQ3B,MAAO,cAAC,EAAD,CAAO4B,MAAO,EAAd,wBAA1B,SACE,cAAC,IAAD,UACG2C,EAAWN,KAAI,SAACQ,GAAD,OACd,eAAC,IAAS1C,KAAV,CAEE2C,MAA2B,YAApBD,EAAIE,SAASC,GAAmB,aAAUC,EAFnD,UAIE,sBACE9E,UAAU,gBACVkC,QAAS,WACPb,EAAiBqD,EAAIvC,KAHzB,UAME,uBAAMnC,UAAU,WAAhB,UACE,sBAAMA,UAAU,WAAhB,SAA4B0E,EAAIK,WAChC,uBAAM/E,UAAU,WAAhB,eAA8B0E,EAAI3B,eAEnC2B,EAAIrC,KACH,mBACE/B,KAAMoE,EAAIrC,IACVH,QAAS,SAACI,GAAD,OAAOA,EAAEC,mBAClBC,OAAO,SACPC,IAAI,sBAJN,SAMGiC,EAAIrC,MAGT,uBAAMrC,UAAU,WAAhB,UACG0E,EAAIE,SAASI,KADhB,MACyBN,EAAIE,SAASC,SAGvCH,EAAIzE,OACHyE,EAAIzE,MAAMiE,KAAI,SAACF,GAAD,OACZ,8BACE,qBAAKhE,UAAU,WAAf,SAA2BgE,KADnBA,MAIbU,EAAIvD,WACFC,EAAUsD,EAAIvC,KACfuC,EAAIvD,SAAS+C,KAAI,SAAC1C,GAAD,OACf,cAAC,EAAD,CAEEA,QAASA,EACTJ,UAAWA,EACXyC,SAAUA,EACV1C,SAAUA,EACVE,iBAAkBA,EAClBlC,QAASsF,GANJjD,EAAQW,SArCduC,EAAIvC,YA8DN1B,OAAMC,KAAK6D,GClFlBxD,GAAUC,IAAVD,MAEFkE,GAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,cAAC,IAAD,CAAMtD,KAAK,QAAQ3B,MAAO,cAAC,GAAD,CAAO4B,MAAO,EAAd,qBAA1B,SACGqD,EAAQhB,KAAI,SAACiB,EAAGb,GAAJ,OACX,4BAAYa,GAAJb,SAOC7D,OAAMC,KAAKuE,ICTlBlE,I,OAAgBC,IAAhBD,OAAOE,GAASD,IAATC,KAETmE,GAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxBT,EAAWS,EAAMjF,MAAMkF,MAAZ,WACV,IAAIC,MAAOC,cAAgBH,EAAMjF,MAAMkF,MAD7B,UAEbD,EAAMjF,MAAMwE,SAChB,OACE,qCACE,sBAAM5E,UAAU,iBAAhB,SAAkC4E,IACjCS,EAAMjF,MAAMyB,OACX,sBAAM7B,UAAU,cAAhB,SAA+BqF,EAAMjF,MAAMyB,YAQ7C4D,GAAgBhF,IAAMC,KAAK0E,IAE3BM,GAAwB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAwB,IAAnBxG,eAAmB,MAAT,GAAS,EACvD,OAAOwG,EAAIzB,KAAI,SAAC0B,GACd,IAAMC,EAAgBD,EAAIE,MAAMvE,QAC9B,SAACwE,GAAD,OACG5G,EAAQ0B,SACRkF,EAAKnF,MACNmF,EAAKnF,KAAKa,MAAK,SAACC,GAAD,OAAOvC,EAAQwC,SAASD,SAE3C,OACE,cAAC,IAAD,CACEE,KAAK,QAELoE,OAAQ,cAAC,GAAD,CAAOnE,MAAO,EAAd,SAAkB+D,EAAIxG,OAC9B0C,WAAY+D,EACZ9D,WAAY,SAACsD,GAAD,OACV,eAAC,IAAKrD,KAAN,CAAWhC,UAAU,aAArB,UACE,sBAAMA,UAAU,cAAhB,SACE,cAAC,GAAD,CAAMoC,QAAM,EAAZ,SAAciD,EAAMY,UAEtB,sBAAMjG,UAAU,cAAhB,SACE,cAACyF,GAAD,CAAeJ,MAAOA,WATvBO,EAAIxG,UAuBX8G,GAAiBzF,IAAMC,KAAKgF,IAE5BS,GAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQjH,EAAc,EAAdA,QAClBkH,EAAeD,EAAO,uBACtBE,EAAaF,EAAO,qBAE1B,OACE,cAAC,IAAD,CAAMxE,KAAK,QAAQ3B,MAAO,cAAC,GAAD,CAAO4B,MAAO,EAAd,oBAA1B,SACE,sBAAK7B,UAAU,mBAAf,UACE,cAACkG,GAAD,CAAgBP,IAAKU,EAAclH,QAASA,IAC5C,cAAC+G,GAAD,CAAgBP,IAAKW,EAAYnH,QAASA,UAQnCsB,OAAMC,KAAKyF,I,SCjElBI,I,OAAWC,KAAXD,QAEFE,GAAU,WAAO,IAAD,EAMhBC,aAAY,SAACC,GAAD,OAAWA,EAAMxH,WAJ/ByH,EAFkB,EAElBA,cACAC,EAHkB,EAGlBA,gBACApC,EAJkB,EAIlBA,aACAqC,EALkB,EAKlBA,WAEIC,EAAWC,cAEjB,OACE,sBAAKhH,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,6EAGA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,8BACA,cAAC,KAAD,CACEiH,KAAK,WACLC,YAAU,EACVC,YAAY,WACZC,aAAcP,EACdQ,SAAU,SAAClI,GAAD,OAAa4H,EZlCA,SAAC5H,GAAD,MAAc,CAC7CC,KAAML,EACNM,QAAS,CAAEF,YYgC6BmI,CAAkBnI,KAClDgF,MAAO,CAAEoD,MAAO,QANlB,SAQGX,EAAc1C,KAAI,SAACsD,GAAD,OACjB,cAACjB,GAAD,UAAuBiB,GAAVA,WAInB,sBAAKxH,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,yBACA,cAAC,KAAD,CACEiH,KAAK,WACLC,YAAU,EACVC,YAAY,aACZC,aAAc3C,EACd4C,SAAU,SAAClI,GAAD,OAAa4H,EAAS7H,EAAeC,KAC/CgF,MAAO,CAAEoD,MAAO,QANlB,SAQGT,EAAW5C,KAAI,SAACtD,GAAD,OACd,cAAC2F,GAAD,UAAoB3F,GAAPA,WAInB,qBAAKZ,UAAU,iBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQkC,QAAS,kBAAM6E,EC5CD,CAC9B3H,KAAMP,KD2CE,qCAGA,cAAC,IAAD,CAAQqD,QAAS,kBAAM6E,EC5CC,CAChC3H,KAAMN,KD2CE,4CAKJ,qBAAKkB,UAAU,eAAf,0IAQSS,OAAMC,KAAK+F,IE1CpBgB,I,OAAuBnI,EAFToI,MAAM,iBAAiB/H,MAAK,SAACgI,GAAD,OAASA,EAAIC,YAI7D,SAASC,GAAehB,GACtB,OACEA,EAAgBlF,SAASyB,IACzByD,EAAgBlF,SAASwB,GAElB,UAEA,MAIX,IAAM2E,GAAgB,WACpB,IAAMC,EAASN,KADW,EAStBf,aAAY,gBAAGvH,EAAH,EAAGA,QAAoB6I,EAAvB,EAAY5G,UAAZ,mBAAC,eACZjC,GADW,IAEdiC,UAAW4G,OAXa,IAIxBvD,oBAJwB,MAIT,GAJS,MAKxBoC,uBALwB,MAKN,GALM,MAOxBzF,iBAPwB,aAQxB0F,kBARwB,MAQX,GARW,EAcpBC,EAAWC,cAEjBiB,qBAAU,WdpDgB,IAACC,Ec4DzB,IAPKC,OAAOC,KAAK3D,GAAc5D,QAAUkH,EAAOM,qBAC9CtB,EAAS7H,EAAe6I,EAAOM,uBAG5BvB,EAAWjG,QAAUkH,EAAOnH,MAC/BmG,Gd1DuBmB,Ec0DDH,EAAOnH,Kd1DK,CACtCxB,KAAMH,EACNI,QAAS,CAAE6I,ac0DJC,OAAOC,KAAKhH,GAAWP,OAAQ,CAClC,IAAMyH,EAAe,GACrBP,EAAOvD,WAAW+D,SAAQ,SAAC7D,GACzB4D,EAAa5D,EAAIvC,IAAMuC,EAAItD,YAAa,EACpCsD,EAAIvD,UACNuD,EAAIvD,SAASoH,SAAQ,SAAC/G,GACpB8G,EAAa9G,EAAQA,SAAWA,EAAQJ,YAAa,QAI3D2G,EAAOS,MAAMD,SAAQ,SAAC/G,GACpB8G,EAAa9G,EAAQW,IAAMX,EAAQJ,YAAa,KAGlD2F,ED/EsB,SAAC3F,GAAD,MAAgB,CAC1ChC,KAAMT,EACNU,QAAS+B,GC6EIqH,CAAaH,OAEvB,CAAClH,EAAW2G,EAAQhB,EAAUtC,EAAcqC,IAE/C,IAAMzF,EAAmBqH,mBACvB,kBAAM,SAACvG,GAAD,OAAQ4E,ED/Ea,SAAC3F,GAAD,MAAgB,CAC7ChC,KAAMR,EACNS,QAAS+B,GC6EgBuH,CAAgBxG,OACvC,CAAC4E,IAGG6B,EAAkB,CACtB,CAACtF,GACC,cAAC,EAAD,CACEnE,QAASsF,EACT5B,QAASkF,EAAOc,WACZ,aAGR,CAACzF,GACC,cAAC,GAAD,CACEjE,QAASsF,EACTD,WAAYuD,EAAOvD,WACnBrD,SAAU4G,EAAO5G,SACjB0C,SAAUgD,EACVzF,UAAWA,EACXC,iBAAkBA,GACd,cAGR,CAACgC,GACC,cAAC,EAAD,CACElE,QAASsF,EACTtD,SAAU4G,EAAOS,MACjBpH,UAAWA,EACXC,iBAAkBA,GACd,YAGR,CAAC8B,GACC,cAAC,GAAD,CAAQhE,QAASsF,EAAc2B,OAAQ2B,EAAO3B,QAAY,UAE5D,CAAClD,GACC,cAAC,GAAD,CAAS/D,QAASsF,EAAcS,QAAS6C,EAAO7C,SAAa,YAIjE,MAAO,CACL,cAAC,EAAD,CAAqBnF,QAASgI,EAAOhI,SAAzB,UAEZ,cAAC,GAAD,GAAa,gBAEb8G,EAAgBlF,SAASuB,IAAY0F,EAAe,SACnD/B,EAAgBlF,SAASyB,IACxByD,EAAgBlF,SAASwB,KACzB,sBACEnD,UAAU,mBACVmE,MAAO,CAAE,wBAAyB0D,GAAehB,IAFnD,UAIE,qBAAK7G,UAAU,cAAf,SACG6G,EAAgBlF,SAASyB,IAAewF,EAAe,aAE1D,qBAAK5I,UAAU,eAAf,SACG6G,EAAgBlF,SAASwB,IAAWyF,EAAe,YAI1D/B,EAAgBlF,SAAS0B,IAAmBuF,EAAgBvF,GAC5DwD,EAAgBlF,SAAS2B,IAAcsF,EAAe,YAIpDE,GAASrI,IAAMC,KAAKoH,IAEpBiB,GAAyB,WAC7B,OACE,cAAC,WAAD,CACEC,SACE,gCACE,cAAC,IAAD,CAAUC,QAAM,IAChB,cAAC,IAAD,CAAUA,QAAM,IAChB,cAAC,IAAD,CAAUA,QAAM,IAChB,cAAC,IAAD,CAAUA,QAAM,OANtB,SAUE,cAAC,GAAD,OAKSxI,OAAMC,KAAKqI,ICvKpBnC,GAAgB,CACpBsC,EACAA,EACAA,EACAA,EACAA,EACAA,GAGIC,GAAU,CACdvC,iBACAC,gBAAiBD,GAAcrF,QAAO,SAAC6H,GAAD,OAAOA,IAAMF,KACnDpC,WAAY,GACZrC,aAAc,ICdV0E,GAAU,GCEDE,GALKC,YAAgB,CAClCnK,QFmBa,WAA8B,IAA7BwH,EAA4B,uDAApBwC,GAASI,EAAW,uCAC1C,OAAQA,EAAOnK,MACb,KAAKL,EAAsB,IACR8H,EAAoB0C,EAAOlK,QAApCF,QACR,OAAO,2BACFwH,GADL,IAEEE,oBAGJ,KAAK7H,EAAmB,IACLyF,EAAiB8E,EAAOlK,QAAjCF,QACR,OAAO,2BACFwH,GADL,IAEElC,iBAGJ,KAAKxF,EAAiB,IACL6H,EAAeyC,EAAOlK,QAA7B6I,MACR,OAAO,2BACFvB,GADL,IAEEG,eAIJ,QACE,OAAOH,IE3CXvF,UDGa,WAA8B,IAA7BuF,EAA4B,uDAApBwC,GAASI,EAAW,uCAC1C,OAAQA,EAAOnK,MACb,KAAKT,EACH,OAAO4K,EAAOlK,QAEhB,KAAKT,EACH,OAAO,2BAAK+H,GAAZ,IAAmB,CAAC4C,EAAOlK,UAAWsH,EAAM4C,EAAOlK,WAErD,KAAKR,EACH,OAAOsJ,OAAOC,KAAKzB,GAAO6C,QAAO,SAACC,EAAKL,GAErC,OADAK,EAAIL,IAAK,EACFK,IACN,IAEL,KAAK3K,EACH,OAAOqJ,OAAOC,KAAKzB,GAAO6C,QAAO,SAACC,EAAKL,GAErC,OADAK,EAAIL,IAAK,EACFK,IACN,IAEL,QACE,OAAO9C,MEhBP+C,GAF4BC,YAAgBC,IAAhBD,CAA4BE,IAEhDC,CACZC,GACAC,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFU,SAASC,eAAe,U","file":"static/js/main.54fe660d.chunk.js","sourcesContent":["export const SET_COLLAPSED = \"SET_COLLAPSED\"\nexport const TOGGLE_COLLAPSED = \"TOGGLE_COLLAPSED\"\nexport const EXPAND_ALL = \"EXPAND_ALL\"\nexport const COLLAPSE_ALL = \"COLLAPSE_ALL\"\n\nexport const SET_SECTION_FILTERS = \"SET_SECTION_FILTERS\"\nexport const SET_TECH_FILTERS = \"SET_TECH_FILTERS\"\nexport const SET_TECH_ORDER = \"SET_TECH_ORDER\"\n","import { SET_SECTION_FILTERS, SET_TECH_FILTERS, SET_TECH_ORDER } from \"./types\"\n\nexport const setSectionFilters = (filters) => ({\n  type: SET_SECTION_FILTERS,\n  payload: { filters },\n})\n\nexport const setTechFilters = (filters) => ({\n  type: SET_TECH_FILTERS,\n  payload: { filters },\n})\n\nexport const setTechOrder = (order) => ({\n  type: SET_TECH_ORDER,\n  payload: { order },\n})\n","const suspend = (promise) => {\n  let result = null\n  let status = \"pending\"\n  const suspender = promise.then(\n    (response) => {\n      status = \"success\"\n      result = response\n    },\n    (error) => {\n      status = \"error\"\n      result = error\n    }\n  )\n\n  return () => {\n    switch (status) {\n      case \"pending\":\n        throw suspender\n      case \"error\":\n        throw result\n      default:\n        return result\n    }\n  }\n}\n\nexport default suspend\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { PageHeader, Button } from \"antd\"\n\nconst Header = ({ contact }) => (\n  <>\n    <PageHeader\n      className=\"resume-page-header\"\n      title={contact.name}\n      subTitle={contact.blurb}\n      extra={[\n        <Button key=\"phone\" href={contact.phone}>\n          {contact.phone}\n        </Button>,\n        <Button key=\"email\" href={`mailto:${contact.email}`} type=\"primary\">\n          {contact.email}\n        </Button>,\n      ]}\n    />\n    <div className=\"print-header\">\n      <div>\n        <div className=\"print-name\">{contact.name}</div>\n        <div className=\"print-phone\">{contact.phone}</div>\n        <div className=\"print-email\">{contact.email}</div>\n      </div>\n    </div>\n  </>\n)\n\nHeader.propTypes = { contact: PropTypes.object }\n\nexport default React.memo(Header)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Tech = ({ tech = [] }) => {\n  if (!tech.length) {\n    return null\n  }\n  return (\n    <div>\n      Technology used:\n      <span className=\"tech\">{tech.join(\", \")}</span>\n    </div>\n  )\n}\n\nTech.propTypes = { tech: PropTypes.object }\n\nexport default React.memo(Tech)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Card, Typography, List } from \"antd\"\nimport Tech from \"components/Tech\"\n\nimport \"./Projects.css\"\n\nconst { Title, Text } = Typography\n\nconst Projects = ({ projects, filters, collapsed, collapseCallback }) => {\n  const filteredProjects = projects.filter(\n    (project) =>\n      !filters.length ||\n      !project.tech ||\n      project.tech.some((t) => filters.includes(t))\n  )\n\n  if (!filteredProjects.length) {\n    return null\n  }\n  return (\n    <Card size=\"small\" title={<Title level={2}>Projects</Title>}>\n      <List\n        dataSource={filteredProjects}\n        renderItem={(project) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <div\n                  className=\"project-container\"\n                  onClick={() => {\n                    collapseCallback(project.id)\n                  }}\n                >\n                  <span className=\"project-name\">\n                    <Text strong>{project.name}</Text>\n                  </span>\n                  {project.url && (\n                    <a\n                      href={project.url}\n                      onClick={(e) => e.stopPropagation()}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {project.url}\n                    </a>\n                  )}\n                  <span className=\"date\">{project.date}</span>\n                </div>\n              }\n              description={\n                <>\n                  {!collapsed[project.id] && <div>{project.description}</div>}\n                  {!collapsed[project.id] && <Tech tech={project.tech} />}\n                </>\n              }\n            />\n          </List.Item>\n        )}\n      />\n    </Card>\n  )\n}\n\nProjects.propTypes = {\n  projects: PropTypes.object,\n  filters: PropTypes.array,\n  collapsed: PropTypes.bool,\n  collapseCallback: PropTypes.func,\n}\n\nexport default React.memo(Projects)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography, List } from \"antd\"\n\nimport \"./Education.css\"\n\nconst { Title, Text } = Typography\n\nconst Education = ({ schools }) => (\n  <Card size=\"small\" title={<Title level={2}>Education</Title>}>\n    <List\n      dataSource={schools}\n      renderItem={(school) => (\n        <List.Item className=\"school\">\n          <List.Item.Meta\n            title={\n              <div className=\"school-container\">\n                <span>\n                  <span className=\"school-name\">\n                    <Text strong>{school.school}</Text>\n                  </span>\n                  , <span className=\"location\">{school.location}</span>\n                </span>\n                <span className=\"date\">{school.date}</span>\n              </div>\n            }\n            description={school.results}\n          />\n        </List.Item>\n      )}\n    />\n  </Card>\n)\n\nEducation.propTypes = {\n  schools: PropTypes.object,\n}\n\nexport default React.memo(Education)\n","export const PROJECT_BLURBS = \"Project Blurbs\"\n\nexport const SUMMARY = \"Summary\"\nexport const SKILLS = \"Skills\"\nexport const EXPERIENCE = \"Experience\"\nexport const OTHER_PROJECTS = \"Other Projects\"\nexport const EDUCATION = \"Education\"\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Tech from \"components/Tech\"\n\nimport \"./Experience.css\"\n\nconst NonMemoRenderTech = ({ tech = [] }) => {\n  if (!tech.length) {\n    return null\n  }\n\n  return (\n    <div className=\"project-tech-box\">\n      <Tech tech={tech} />\n    </div>\n  )\n}\n\nNonMemoRenderTech.propTypes = { tech: PropTypes.array }\n\nconst RenderTech = React.memo(NonMemoRenderTech)\n\nconst NonMemoRenderHighlight = ({ highlight, filters = [] }) => {\n  if (\n    filters.length &&\n    highlight.tech &&\n    !highlight.tech.some((t) => filters.includes(t))\n  ) {\n    return null\n  }\n\n  return (\n    <li key={highlight.blurb}>\n      {highlight.blurb}\n      <RenderTech tech={highlight.tech} />\n    </li>\n  )\n}\n\nNonMemoRenderHighlight.propTypes = {\n  highlight: PropTypes.object,\n  filters: PropTypes.array,\n}\n\nconst RenderHighlight = React.memo(NonMemoRenderHighlight)\n\nexport default RenderHighlight\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { PROJECT_BLURBS } from \"filter_types\"\nimport RenderHighlight from \"./RenderHighlight\"\n\nconst JobProject = ({\n  project,\n  collapseCallback,\n  collapsed,\n  sections,\n  projects,\n  filters,\n}) => {\n  const project_name = project.project\n  return (\n    <React.Fragment key={project_name}>\n      <div\n        className=\"job-project\"\n        key={`${project_name}-info`}\n        onClick={() => {\n          collapseCallback(project_name)\n        }}\n      >\n        <div>\n          <span className=\"job-project-name\">{project_name}</span>\n          <span className=\"project-role\">{project.role}</span>\n          <span className=\"project-members\">{project.members} person team</span>\n          {project.url && (\n            <span className=\"float-right\">\n              {project.url.map((url) => (\n                <a\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  key={url}\n                >\n                  {\" \"}\n                  {url}\n                </a>\n              ))}\n            </span>\n          )}\n        </div>\n        <div className=\"date\">\n          <div className=\"float-right\">{project.date}</div>\n        </div>\n      </div>\n      {projects[project_name] && sections[PROJECT_BLURBS] && (\n        <div key={`${project_name}-blurb`}>\n          <div className=\"project-blurb\">{projects[project_name].blurb}</div>\n          {projects[project_name].url && (\n            <div>\n              <ul style={{ listStyle: \"none\" }} className=\"float-right\">\n                {projects[project_name].url.map((url) => {\n                  return (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {url}\n                      </a>\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n      {project.highlights && !collapsed[project.project] && (\n        <div className=\"project-highlight\" key={`${project_name}-highlights`}>\n          <div className=\"highlight\">\n            <ul>\n              {project.highlights.map((highlight, i) => {\n                return (\n                  <RenderHighlight\n                    key={i}\n                    highlight={highlight}\n                    filters={filters}\n                  />\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nJobProject.propTypes = {\n  project: PropTypes.object,\n  collapseCallback: PropTypes.func,\n  collapsed: PropTypes.bool,\n  sections: PropTypes.array,\n  projects: PropTypes.object,\n  filters: PropTypes.array,\n}\n\nexport default React.memo(JobProject)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography, Timeline } from \"antd\"\n\nimport JobProject from \"./JobProject\"\n\nimport \"./Experience.css\"\n\nconst { Title } = Typography\n\nconst Experience = ({\n  experience,\n  tech_filters,\n  sections,\n  projects,\n  collapsed,\n  collapseCallback,\n}) => {\n  return (\n    <Card size=\"small\" title={<Title level={2}>Experience</Title>}>\n      <Timeline>\n        {experience.map((job) => (\n          <Timeline.Item\n            key={job.id}\n            color={job.duration.to === \"present\" ? \"green\" : undefined}\n          >\n            <div\n              className=\"job-container\"\n              onClick={() => {\n                collapseCallback(job.id)\n              }}\n            >\n              <span className=\"job-name\">\n                <span className=\"employer\">{job.employer}</span>\n                <span className=\"location\">, {job.location}</span>\n              </span>\n              {job.url && (\n                <a\n                  href={job.url}\n                  onClick={(e) => e.stopPropagation()}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {job.url}\n                </a>\n              )}\n              <span className=\"duration\">\n                {job.duration.from} - {job.duration.to}\n              </span>\n            </div>\n            {job.title &&\n              job.title.map((role) => (\n                <div key={role}>\n                  <div className=\"job-role\">{role}</div>\n                </div>\n              ))}\n            {job.projects &&\n              !collapsed[job.id] &&\n              job.projects.map((project) => (\n                <JobProject\n                  key={project.id}\n                  project={project}\n                  collapsed={collapsed}\n                  sections={sections}\n                  projects={projects}\n                  collapseCallback={collapseCallback}\n                  filters={tech_filters}\n                />\n              ))}\n          </Timeline.Item>\n        ))}\n      </Timeline>\n    </Card>\n  )\n}\n\nExperience.propTypes = {\n  experience: PropTypes.object,\n  tech_filters: PropTypes.array,\n  sections: PropTypes.object,\n  projects: PropTypes.object,\n  collapsed: PropTypes.bool,\n  collapseCallback: PropTypes.func,\n}\n\nexport default React.memo(Experience)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography } from \"antd\"\nconst { Title } = Typography\n\nconst Summary = ({ summary }) => (\n  <Card size=\"small\" title={<Title level={2}>Summary</Title>}>\n    {summary.map((p, i) => (\n      <p key={i}>{p}</p>\n    ))}\n  </Card>\n)\n\nSummary.propTypes = { summary: PropTypes.object }\n\nexport default React.memo(Summary)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { List, Card, Typography } from \"antd\"\n\nimport \"./Skills.css\"\n\nconst { Title, Text } = Typography\n\nconst NonMemoSkillDuration = ({ skill }) => {\n  const duration = skill.blurb.since\n    ? `${new Date().getFullYear() - skill.blurb.since} years`\n    : skill.blurb.duration\n  return (\n    <>\n      <span className=\"skill-duration\">{duration}</span>\n      {skill.blurb.level && (\n        <span className=\"skill-level\">{skill.blurb.level}</span>\n      )}\n    </>\n  )\n}\n\nNonMemoSkillDuration.propTypes = { skill: PropTypes.object }\n\nconst SkillDuration = React.memo(NonMemoSkillDuration)\n\nconst NonMemoRenderSkillSet = ({ set, filters = [] }) => {\n  return set.map((cat) => {\n    const filteredItems = cat.items.filter(\n      (item) =>\n        !filters.length ||\n        !item.tech ||\n        item.tech.some((t) => filters.includes(t))\n    )\n    return (\n      <List\n        size=\"small\"\n        key={cat.type}\n        header={<Title level={4}>{cat.type}</Title>}\n        dataSource={filteredItems}\n        renderItem={(skill) => (\n          <List.Item className=\"skill-item\">\n            <span className=\"skill-label\">\n              <Text strong>{skill.label}</Text>\n            </span>\n            <span className=\"skill-value\">\n              <SkillDuration skill={skill} />\n            </span>\n          </List.Item>\n        )}\n      />\n    )\n  })\n}\n\nNonMemoRenderSkillSet.propTypes = {\n  set: PropTypes.array,\n  filters: PropTypes.array,\n}\n\nconst RenderSkillSet = React.memo(NonMemoRenderSkillSet)\n\nconst Skills = ({ skills, filters }) => {\n  const professional = skills[\"Professional Skills\"]\n  const additional = skills[\"Additional Skills\"]\n\n  return (\n    <Card size=\"small\" title={<Title level={2}>Skills</Title>}>\n      <div className=\"skills-container\">\n        <RenderSkillSet set={professional} filters={filters} />\n        <RenderSkillSet set={additional} filters={filters} />\n      </div>\n    </Card>\n  )\n}\n\nSkills.propTypes = { skills: PropTypes.object, filters: PropTypes.array }\n\nexport default React.memo(Skills)\n","import React from \"react\"\nimport { Select, Button } from \"antd\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport {\n  setTechFilters,\n  setSectionFilters,\n  expandAll,\n  collapseAll,\n} from \"actions\"\n\nimport \"./Filters.css\"\n\nconst { Option } = Select\n\nconst Filters = () => {\n  const {\n    section_order,\n    section_filters,\n    tech_filters,\n    tech_order,\n  } = useSelector((state) => state.filters)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"filter-container\">\n      <div className=\"instructions\">\n        You&apos;re busy. Filter down the resume to only show what you want.\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-section-label\">Resume sections:</div>\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"Sections\"\n          defaultValue={section_filters}\n          onChange={(filters) => dispatch(setSectionFilters(filters))}\n          style={{ width: \"100%\" }}\n        >\n          {section_order.map((section) => (\n            <Option key={section}>{section}</Option>\n          ))}\n        </Select>\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-section-label\">Technology:</div>\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"Technology\"\n          defaultValue={tech_filters}\n          onChange={(filters) => dispatch(setTechFilters(filters))}\n          style={{ width: \"100%\" }}\n        >\n          {tech_order.map((tech) => (\n            <Option key={tech}>{tech}</Option>\n          ))}\n        </Select>\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-buttons\">\n          <Button onClick={() => dispatch(expandAll())}>\n            Expand all sub-sections\n          </Button>\n          <Button onClick={() => dispatch(collapseAll())}>\n            Collapse all sub-sections\n          </Button>\n        </div>\n      </div>\n      <div className=\"instructions\">\n        Click on company names and projects to expand/collapse individual jobs,\n        if you want to see the old stuff from years ago.\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Filters)\n","import {\n  SET_COLLAPSED,\n  TOGGLE_COLLAPSED,\n  COLLAPSE_ALL,\n  EXPAND_ALL,\n} from \"./types\"\n\nexport const setCollapsed = (collapsed) => ({\n  type: SET_COLLAPSED,\n  payload: collapsed,\n})\n\nexport const toggleCollapsed = (collapsed) => ({\n  type: TOGGLE_COLLAPSED,\n  payload: collapsed,\n})\n\nexport const expandAll = () => ({\n  type: EXPAND_ALL,\n})\nexport const collapseAll = () => ({\n  type: COLLAPSE_ALL,\n})\n","import React, { Suspense, useMemo, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Skeleton } from \"antd\"\n\nimport \"antd/dist/antd.css\"\n\nimport {\n  setTechFilters,\n  setTechOrder,\n  setCollapsed,\n  toggleCollapsed,\n} from \"actions\"\nimport suspend from \"suspend\"\n\nimport Header from \"./Header\"\n\nimport Projects from \"components/Projects\"\nimport Education from \"components/Education\"\nimport Experience from \"components/Experience\"\nimport Summary from \"components/Summary\"\nimport Skills from \"components/Skills\"\nimport Filters from \"components/Filters\"\n\nimport {\n  EDUCATION,\n  EXPERIENCE,\n  OTHER_PROJECTS,\n  SKILLS,\n  SUMMARY,\n} from \"filter_types\"\n\nimport \"./Resume.css\"\n\nconst fetchResume = fetch(\"./resume.json\").then((res) => res.json())\n\nconst suspendedFetchResume = suspend(fetchResume)\n\nfunction getGridColumns(section_filters) {\n  if (\n    section_filters.includes(EXPERIENCE) &&\n    section_filters.includes(SKILLS)\n  ) {\n    return \"3fr 1fr\"\n  } else {\n    return \"1fr\"\n  }\n}\n\nconst NonMemoResume = () => {\n  const resume = suspendedFetchResume()\n\n  const {\n    tech_filters = [],\n    section_filters = [],\n    // section_order = [],\n    collapsed = false,\n    tech_order = [],\n  } = useSelector(({ filters, collapsed: c }) => ({\n    ...filters,\n    collapsed: c,\n  }))\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!Object.keys(tech_filters).length && resume.active_tech_filters) {\n      dispatch(setTechFilters(resume.active_tech_filters))\n    }\n\n    if (!tech_order.length && resume.tech) {\n      dispatch(setTechOrder(resume.tech))\n    }\n    if (!Object.keys(collapsed).length) {\n      const newCollapsed = {}\n      resume.experience.forEach((job) => {\n        newCollapsed[job.id] = job.collapsed || false\n        if (job.projects) {\n          job.projects.forEach((project) => {\n            newCollapsed[project.project] = project.collapsed || false\n          })\n        }\n      })\n      resume.other.forEach((project) => {\n        newCollapsed[project.id] = project.collapsed || false\n      })\n\n      dispatch(setCollapsed(newCollapsed))\n    }\n  }, [collapsed, resume, dispatch, tech_filters, tech_order])\n\n  const collapseCallback = useMemo(\n    () => (id) => dispatch(toggleCollapsed(id)),\n    [dispatch]\n  )\n\n  const section_mapping = {\n    [EDUCATION]: (\n      <Education\n        filters={tech_filters}\n        schools={resume.education}\n        key=\"education\"\n      />\n    ),\n    [EXPERIENCE]: (\n      <Experience\n        filters={tech_filters}\n        experience={resume.experience}\n        projects={resume.projects}\n        sections={section_filters}\n        collapsed={collapsed}\n        collapseCallback={collapseCallback}\n        key=\"experience\"\n      />\n    ),\n    [OTHER_PROJECTS]: (\n      <Projects\n        filters={tech_filters}\n        projects={resume.other}\n        collapsed={collapsed}\n        collapseCallback={collapseCallback}\n        key=\"projects\"\n      />\n    ),\n    [SKILLS]: (\n      <Skills filters={tech_filters} skills={resume.skills} key=\"skills\" />\n    ),\n    [SUMMARY]: (\n      <Summary filters={tech_filters} summary={resume.summary} key=\"summary\" />\n    ),\n  }\n\n  return [\n    <Header key=\"header\" contact={resume.contact} />,\n\n    <Filters key=\"tech_filters\" />,\n    // ...sections,\n    section_filters.includes(SUMMARY) && section_mapping[SUMMARY],\n    (section_filters.includes(EXPERIENCE) ||\n      section_filters.includes(SKILLS)) && (\n      <div\n        className=\"resume-container\"\n        style={{ \"grid-template-columns\": getGridColumns(section_filters) }}\n      >\n        <div className=\"left-column\">\n          {section_filters.includes(EXPERIENCE) && section_mapping[EXPERIENCE]}\n        </div>\n        <div className=\"right-column\">\n          {section_filters.includes(SKILLS) && section_mapping[SKILLS]}\n        </div>\n      </div>\n    ),\n    section_filters.includes(OTHER_PROJECTS) && section_mapping[OTHER_PROJECTS],\n    section_filters.includes(EDUCATION) && section_mapping[EDUCATION],\n  ]\n}\n\nconst Resume = React.memo(NonMemoResume)\n\nconst NonMemoResumeRetriever = () => {\n  return (\n    <Suspense\n      fallback={\n        <div>\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n        </div>\n      }\n    >\n      <Resume />\n    </Suspense>\n  )\n}\n\nexport default React.memo(NonMemoResumeRetriever)\n","import {\n  SET_SECTION_FILTERS,\n  SET_TECH_FILTERS,\n  SET_TECH_ORDER,\n} from \"../actions/types\"\n\nimport * as types from \"../filter_types\"\n\nconst section_order = [\n  types.SUMMARY,\n  types.SKILLS,\n  types.EXPERIENCE,\n  types.OTHER_PROJECTS,\n  types.EDUCATION,\n  types.PROJECT_BLURBS,\n]\n\nconst INITIAL = {\n  section_order,\n  section_filters: section_order.filter((s) => s !== types.PROJECT_BLURBS),\n  tech_order: [],\n  tech_filters: [],\n}\n\nexport default (state = INITIAL, action) => {\n  switch (action.type) {\n    case SET_SECTION_FILTERS: {\n      const { filters: section_filters } = action.payload\n      return {\n        ...state,\n        section_filters,\n      }\n    }\n    case SET_TECH_FILTERS: {\n      const { filters: tech_filters } = action.payload\n      return {\n        ...state,\n        tech_filters,\n      }\n    }\n    case SET_TECH_ORDER: {\n      const { order: tech_order } = action.payload\n      return {\n        ...state,\n        tech_order,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  SET_COLLAPSED,\n  TOGGLE_COLLAPSED,\n  EXPAND_ALL,\n  COLLAPSE_ALL,\n} from \"../actions/types\"\n\nconst INITIAL = {}\n\nexport default (state = INITIAL, action) => {\n  switch (action.type) {\n    case SET_COLLAPSED: {\n      return action.payload\n    }\n    case TOGGLE_COLLAPSED: {\n      return { ...state, [action.payload]: !state[action.payload] }\n    }\n    case EXPAND_ALL: {\n      return Object.keys(state).reduce((acc, s) => {\n        acc[s] = false\n        return acc\n      }, {})\n    }\n    case COLLAPSE_ALL: {\n      return Object.keys(state).reduce((acc, s) => {\n        acc[s] = true\n        return acc\n      }, {})\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import { combineReducers } from \"redux\"\nimport filterReducer from \"./filter_reducer\"\nimport collapsedReducer from \"./collapsed_reducer\"\n\nconst rootReducer = combineReducers({\n  filters: filterReducer,\n  collapsed: collapsedReducer,\n})\n\nexport default rootReducer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport reduxThunk from \"redux-thunk\"\n\nimport \"./index.css\"\nimport Resume from \"./components/Resume\"\n\nimport reducers from \"./reducers\"\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore)\n\nconst store = createStoreWithMiddleware(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Resume />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}