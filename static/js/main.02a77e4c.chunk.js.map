{"version":3,"sources":["actions/types.js","actions/filters.js","suspend.js","components/Resume/Header.js","components/Tech.js","components/Projects/index.js","components/Education/index.js","filter_types.js","components/Experience/RenderHighlight.js","components/Experience/JobProject.js","components/Experience/index.js","components/Summary/index.js","components/Skills/index.js","components/Filters/index.js","actions/collapsed.js","components/Resume/index.js","reducers/filter_reducer.js","reducers/collapsed_reducer.js","reducers/index.js","index.js"],"names":["SET_COLLAPSED","TOGGLE_COLLAPSED","EXPAND_ALL","COLLAPSE_ALL","SET_SECTION_FILTERS","SET_TECH_FILTERS","SET_TECH_ORDER","setTechFilters","filters","type","payload","suspend","promise","result","status","suspender","then","response","error","AvailableIcons","GithubOutlined","Header","contact","className","title","name","subTitle","blurb","extra","urls","map","site","Icon","icon","href","url","label","phone","email","React","memo","Tech","tech","length","join","Title","Typography","Text","Projects","projects","collapsed","collapseCallback","filteredProjects","filter","project","some","t","includes","size","level","dataSource","renderItem","Item","Meta","onClick","id","strong","e","stopPropagation","target","rel","date","description","Education","schools","school","location","results","PROJECT_BLURBS","SUMMARY","SKILLS","EXPERIENCE","OTHER_PROJECTS","EDUCATION","NonMemoRenderTech","RenderTech","NonMemoRenderHighlight","highlight","RenderHighlight","JobProject","sections","project_name","Fragment","role","members","style","listStyle","highlights","i","Experience","experience","tech_filters","job","color","duration","to","undefined","employer","from","Summary","summary","p","NonMemoSkillDuration","skill","since","Date","getFullYear","SkillDuration","NonMemoRenderSkillSet","set","cat","filteredItems","items","item","header","RenderSkillSet","Skills","skills","professional","additional","Option","Select","Filters","useSelector","state","section_order","section_filters","tech_order","dispatch","useDispatch","mode","allowClear","placeholder","defaultValue","onChange","setSectionFilters","width","section","suspendedFetchResume","fetch","res","json","getGridColumns","NonMemoResume","resume","document","c","useEffect","order","Object","keys","active_tech_filters","newCollapsed","forEach","other","setCollapsed","useMemo","toggleCollapsed","section_mapping","education","gridTemplateColumns","Resume","NonMemoResumeRetriever","fallback","active","types","INITIAL","s","rootReducer","combineReducers","action","reduce","acc","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.02a77e4c.chunk.js","sourcesContent":["export const SET_COLLAPSED = \"SET_COLLAPSED\"\nexport const TOGGLE_COLLAPSED = \"TOGGLE_COLLAPSED\"\nexport const EXPAND_ALL = \"EXPAND_ALL\"\nexport const COLLAPSE_ALL = \"COLLAPSE_ALL\"\n\nexport const SET_SECTION_FILTERS = \"SET_SECTION_FILTERS\"\nexport const SET_TECH_FILTERS = \"SET_TECH_FILTERS\"\nexport const SET_TECH_ORDER = \"SET_TECH_ORDER\"\n","import { SET_SECTION_FILTERS, SET_TECH_FILTERS, SET_TECH_ORDER } from \"./types\"\n\nexport const setSectionFilters = (filters) => ({\n  type: SET_SECTION_FILTERS,\n  payload: { filters },\n})\n\nexport const setTechFilters = (filters) => ({\n  type: SET_TECH_FILTERS,\n  payload: { filters },\n})\n\nexport const setTechOrder = (order) => ({\n  type: SET_TECH_ORDER,\n  payload: { order },\n})\n","const suspend = (promise) => {\n  let result = null\n  let status = \"pending\"\n  const suspender = promise.then(\n    (response) => {\n      status = \"success\"\n      result = response\n    },\n    (error) => {\n      status = \"error\"\n      result = error\n    }\n  )\n\n  return () => {\n    switch (status) {\n      case \"pending\":\n        throw suspender\n      case \"error\":\n        throw result\n      default:\n        return result\n    }\n  }\n}\n\nexport default suspend\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { PageHeader, Button } from \"antd\"\n\n// import and define any icons you'd like here. We're using ant-design, and then just set a mapping\n// from the string -> component in the AvailableIcons set and you're done.\nimport { GithubOutlined } from \"@ant-design/icons\"\n\nconst AvailableIcons = { GithubOutlined }\n\nconst Header = ({ contact }) => (\n  <>\n    <PageHeader\n      className=\"resume-page-header\"\n      title={contact.name}\n      subTitle={contact.blurb}\n      extra={[\n        ...(contact.urls || []).map((site) => {\n          const Icon = AvailableIcons[site.icon]\n\n          return (\n            <Button key={site.url} href={site.url}>\n              {AvailableIcons[site.icon] && <Icon />} {site.label || site.url}\n            </Button>\n          )\n        }),\n        <Button key=\"phone\" href={`tel:${contact.phone}`}>\n          {contact.phone}\n        </Button>,\n        <Button key=\"email\" href={`mailto:${contact.email}`} type=\"primary\">\n          {contact.email}\n        </Button>,\n      ]}\n    />\n    <div className=\"print-header\">\n      <span className=\"print-name\">{contact.name}</span>\n      <a href={`tel:${contact.phone}`}>{contact.phone}</a>\n      <a href={`mailto:${contact.email}`}>{contact.email}</a>\n    </div>\n    <div className=\"print-header\">\n      {(contact.urls || []).map((site) => {\n        const Icon = AvailableIcons[site.icon]\n\n        return (\n          <a key={site.url} href={site.url}>\n            {AvailableIcons[site.icon] && <Icon />} {site.label || site.url}\n          </a>\n        )\n      })}\n    </div>\n  </>\n)\n\nHeader.propTypes = { contact: PropTypes.object }\n\nexport default React.memo(Header)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Tech = ({ tech = [] }) => {\n  if (!tech.length) {\n    return null\n  }\n  return (\n    <div>\n      Technology used:\n      <span className=\"tech\">{tech.join(\", \")}</span>\n    </div>\n  )\n}\n\nTech.propTypes = { tech: PropTypes.array }\n\nexport default React.memo(Tech)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Card, Typography, List } from \"antd\"\nimport Tech from \"components/Tech\"\n\nimport \"./Projects.css\"\n\nconst { Title, Text } = Typography\n\nconst Projects = ({ projects, filters, collapsed, collapseCallback }) => {\n  const filteredProjects = projects.filter(\n    (project) =>\n      !filters.length ||\n      !project.tech ||\n      project.tech.some((t) => filters.includes(t))\n  )\n\n  if (!filteredProjects.length) {\n    return null\n  }\n  return (\n    <Card size=\"small\" title={<Title level={2}>Projects</Title>}>\n      <List\n        dataSource={filteredProjects}\n        renderItem={(project) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <div\n                  className=\"project-container\"\n                  onClick={() => {\n                    collapseCallback(project.id)\n                  }}\n                >\n                  <span className=\"project-name\">\n                    <Text strong>{project.name}</Text>\n                  </span>\n                  {project.url && (\n                    <a\n                      href={project.url}\n                      onClick={(e) => e.stopPropagation()}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {project.url}\n                    </a>\n                  )}\n                  <span className=\"date\">{project.date}</span>\n                </div>\n              }\n              description={\n                <>\n                  {!collapsed[project.id] && <div>{project.description}</div>}\n                  {!collapsed[project.id] && <Tech tech={project.tech} />}\n                </>\n              }\n            />\n          </List.Item>\n        )}\n      />\n    </Card>\n  )\n}\n\nProjects.propTypes = {\n  projects: PropTypes.array,\n  filters: PropTypes.array,\n  collapsed: PropTypes.object,\n  collapseCallback: PropTypes.func,\n}\n\nexport default React.memo(Projects)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography, List } from \"antd\"\n\nimport \"./Education.css\"\n\nconst { Title, Text } = Typography\n\nconst Education = ({ schools }) => (\n  <Card size=\"small\" title={<Title level={2}>Education</Title>}>\n    <List\n      dataSource={schools}\n      renderItem={(school) => (\n        <List.Item className=\"school\">\n          <List.Item.Meta\n            title={\n              <div className=\"school-container\">\n                <span>\n                  <span className=\"school-name\">\n                    <Text strong>{school.school}</Text>\n                  </span>\n                  , <span className=\"location\">{school.location}</span>\n                </span>\n                <span className=\"date\">{school.date}</span>\n              </div>\n            }\n            description={school.results}\n          />\n        </List.Item>\n      )}\n    />\n  </Card>\n)\n\nEducation.propTypes = {\n  schools: PropTypes.array,\n}\n\nexport default React.memo(Education)\n","export const PROJECT_BLURBS = \"Project Blurbs\"\n\nexport const SUMMARY = \"Summary\"\nexport const SKILLS = \"Skills\"\nexport const EXPERIENCE = \"Experience\"\nexport const OTHER_PROJECTS = \"Other Projects\"\nexport const EDUCATION = \"Education\"\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Tech from \"components/Tech\"\n\nimport \"./Experience.css\"\n\nconst NonMemoRenderTech = ({ tech = [] }) => {\n  if (!tech.length) {\n    return null\n  }\n\n  return (\n    <div className=\"project-tech-box\">\n      <Tech tech={tech} />\n    </div>\n  )\n}\n\nNonMemoRenderTech.propTypes = { tech: PropTypes.array }\n\nconst RenderTech = React.memo(NonMemoRenderTech)\n\nconst NonMemoRenderHighlight = ({ highlight, filters = [] }) => {\n  if (\n    filters.length &&\n    highlight.tech &&\n    !highlight.tech.some((t) => filters.includes(t))\n  ) {\n    return null\n  }\n\n  return (\n    <li key={highlight.blurb}>\n      {highlight.blurb}\n      <RenderTech tech={highlight.tech} />\n    </li>\n  )\n}\n\nNonMemoRenderHighlight.propTypes = {\n  highlight: PropTypes.object,\n  filters: PropTypes.array,\n}\n\nconst RenderHighlight = React.memo(NonMemoRenderHighlight)\n\nexport default RenderHighlight\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { PROJECT_BLURBS } from \"filter_types\"\nimport RenderHighlight from \"./RenderHighlight\"\n\nconst JobProject = ({\n  project,\n  collapseCallback,\n  collapsed,\n  sections,\n  projects,\n  filters,\n}) => {\n  const project_name = project.project\n  return (\n    <React.Fragment key={project_name}>\n      <div\n        className=\"job-project\"\n        key={`${project_name}-info`}\n        onClick={() => {\n          collapseCallback(project_name)\n        }}\n      >\n        <div className=\"job-project-container\">\n          <span>\n            <span className=\"job-project-name\">{project_name}</span>\n            <span className=\"project-role\">{project.role}</span>\n\n            <span className=\"project-members\">\n              {project.members} person team\n            </span>\n          </span>\n          {project.url && (\n            <span className=\"float-right\">\n              {project.url.map((url) => (\n                <a\n                  href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  key={url}\n                >\n                  {\" \"}\n                  {url}\n                </a>\n              ))}\n            </span>\n          )}\n\n          <div className=\"date\">\n            <div className=\"float-right\">{project.date}</div>\n          </div>\n        </div>\n      </div>\n      {projects[project_name] && sections[PROJECT_BLURBS] && (\n        <div key={`${project_name}-blurb`}>\n          <div className=\"project-blurb\">{projects[project_name].blurb}</div>\n          {projects[project_name].url && (\n            <div>\n              <ul style={{ listStyle: \"none\" }} className=\"float-right\">\n                {projects[project_name].url.map((url) => {\n                  return (\n                    <li key={url}>\n                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {url}\n                      </a>\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n      {project.highlights && !collapsed[project.project] && (\n        <div className=\"project-highlight\" key={`${project_name}-highlights`}>\n          <div className=\"highlight\">\n            <ul>\n              {project.highlights.map((highlight, i) => {\n                return (\n                  <RenderHighlight\n                    key={i}\n                    highlight={highlight}\n                    filters={filters}\n                  />\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nJobProject.propTypes = {\n  project: PropTypes.object,\n  collapseCallback: PropTypes.func,\n  collapsed: PropTypes.object,\n  sections: PropTypes.array,\n  projects: PropTypes.object,\n  filters: PropTypes.array,\n}\n\nexport default React.memo(JobProject)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography, Timeline } from \"antd\"\n\nimport JobProject from \"./JobProject\"\n\nimport \"./Experience.css\"\n\nconst { Title } = Typography\n\nconst Experience = ({\n  experience,\n  tech_filters,\n  sections,\n  projects,\n  collapsed,\n  collapseCallback,\n}) => {\n  return (\n    <Card size=\"small\" title={<Title level={2}>Experience</Title>}>\n      <Timeline>\n        {experience.map((job) => (\n          <Timeline.Item\n            key={job.id}\n            color={job.duration.to === \"present\" ? \"green\" : undefined}\n          >\n            <div\n              className=\"job-container\"\n              onClick={() => {\n                collapseCallback(job.id)\n              }}\n            >\n              <span className=\"job-name\">\n                <span className=\"employer\">{job.employer}</span>\n                <span className=\"location\">, {job.location}</span>\n              </span>\n              {job.url && (\n                <a\n                  href={job.url}\n                  onClick={(e) => e.stopPropagation()}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {job.url}\n                </a>\n              )}\n              <span className=\"duration\">\n                {job.duration.from} - {job.duration.to}\n              </span>\n            </div>\n            {job.title &&\n              job.title.map((role) => (\n                <div key={role}>\n                  <div className=\"job-role\">{role}</div>\n                </div>\n              ))}\n            {job.projects &&\n              !collapsed[job.id] &&\n              job.projects.map((project) => (\n                <JobProject\n                  key={project.project}\n                  project={project}\n                  collapsed={collapsed}\n                  sections={sections}\n                  projects={projects}\n                  collapseCallback={collapseCallback}\n                  filters={tech_filters}\n                />\n              ))}\n          </Timeline.Item>\n        ))}\n      </Timeline>\n    </Card>\n  )\n}\n\nExperience.propTypes = {\n  experience: PropTypes.array,\n  tech_filters: PropTypes.array,\n  sections: PropTypes.array,\n  projects: PropTypes.object,\n  collapsed: PropTypes.object,\n  collapseCallback: PropTypes.func,\n}\n\nexport default React.memo(Experience)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Card, Typography } from \"antd\"\nconst { Title } = Typography\n\nconst Summary = ({ summary }) => (\n  <Card size=\"small\" title={<Title level={2}>Summary</Title>}>\n    {summary.map((p, i) => (\n      <p key={i}>{p}</p>\n    ))}\n  </Card>\n)\n\nSummary.propTypes = { summary: PropTypes.array }\n\nexport default React.memo(Summary)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { List, Card, Typography } from \"antd\"\n\nimport \"./Skills.css\"\n\nconst { Title, Text } = Typography\n\nconst NonMemoSkillDuration = ({ skill }) => {\n  const duration = skill.blurb.since\n    ? `${new Date().getFullYear() - skill.blurb.since} years`\n    : skill.blurb.duration\n  return (\n    <>\n      <span className=\"skill-duration\">{duration}</span>\n      {skill.blurb.level && (\n        <span className=\"skill-level\">{skill.blurb.level}</span>\n      )}\n    </>\n  )\n}\n\nNonMemoSkillDuration.propTypes = { skill: PropTypes.object }\n\nconst SkillDuration = React.memo(NonMemoSkillDuration)\n\nconst NonMemoRenderSkillSet = ({ set, filters = [] }) => {\n  return set.map((cat) => {\n    const filteredItems = cat.items.filter(\n      (item) =>\n        !filters.length ||\n        !item.tech ||\n        item.tech.some((t) => filters.includes(t))\n    )\n    return (\n      <List\n        size=\"small\"\n        key={cat.type}\n        header={<Title level={4}>{cat.type}</Title>}\n        dataSource={filteredItems}\n        renderItem={(skill) => (\n          <List.Item className=\"skill-item\">\n            <span className=\"skill-label\">\n              <Text strong>{skill.label}</Text>\n            </span>\n            <span className=\"skill-value\">\n              <SkillDuration skill={skill} />\n            </span>\n          </List.Item>\n        )}\n      />\n    )\n  })\n}\n\nNonMemoRenderSkillSet.propTypes = {\n  set: PropTypes.array,\n  filters: PropTypes.array,\n}\n\nconst RenderSkillSet = React.memo(NonMemoRenderSkillSet)\n\nconst Skills = ({ skills, filters }) => {\n  const professional = skills[\"Professional Skills\"]\n  const additional = skills[\"Additional Skills\"]\n\n  return (\n    <Card size=\"small\" title={<Title level={2}>Skills</Title>}>\n      <div className=\"skills-container\">\n        <RenderSkillSet set={professional} filters={filters} />\n        <RenderSkillSet set={additional} filters={filters} />\n      </div>\n    </Card>\n  )\n}\n\nSkills.propTypes = { skills: PropTypes.object, filters: PropTypes.array }\n\nexport default React.memo(Skills)\n","import React from \"react\"\nimport { Select, Button } from \"antd\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport {\n  setTechFilters,\n  setSectionFilters,\n  expandAll,\n  collapseAll,\n} from \"actions\"\n\nimport \"./Filters.css\"\n\nconst { Option } = Select\n\nconst Filters = () => {\n  const {\n    section_order,\n    section_filters,\n    tech_filters,\n    tech_order,\n  } = useSelector((state) => state.filters)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"filter-container\">\n      <div className=\"instructions\">\n        You&apos;re busy. Filter down the resume to only show what you want.\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-section-label\">Resume sections:</div>\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"Sections\"\n          defaultValue={section_filters}\n          onChange={(filters) => dispatch(setSectionFilters(filters))}\n          style={{ width: \"100%\" }}\n        >\n          {section_order.map((section) => (\n            <Option key={section}>{section}</Option>\n          ))}\n        </Select>\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-section-label\">Technology:</div>\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"Technology\"\n          defaultValue={tech_filters}\n          onChange={(filters) => dispatch(setTechFilters(filters))}\n          style={{ width: \"100%\" }}\n        >\n          {tech_order.map((tech) => (\n            <Option key={tech}>{tech}</Option>\n          ))}\n        </Select>\n      </div>\n      <div className=\"filter-section\">\n        <div className=\"filter-buttons\">\n          <Button onClick={() => dispatch(expandAll())}>\n            Expand all sub-sections\n          </Button>\n          <Button onClick={() => dispatch(collapseAll())}>\n            Collapse all sub-sections\n          </Button>\n        </div>\n      </div>\n      <div className=\"instructions\">\n        Click on company names and projects to expand/collapse individual jobs,\n        if you want to see the old stuff from years ago.\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Filters)\n","import {\n  SET_COLLAPSED,\n  TOGGLE_COLLAPSED,\n  COLLAPSE_ALL,\n  EXPAND_ALL,\n} from \"./types\"\n\nexport const setCollapsed = (collapsed) => ({\n  type: SET_COLLAPSED,\n  payload: collapsed,\n})\n\nexport const toggleCollapsed = (collapsed) => ({\n  type: TOGGLE_COLLAPSED,\n  payload: collapsed,\n})\n\nexport const expandAll = () => ({\n  type: EXPAND_ALL,\n})\nexport const collapseAll = () => ({\n  type: COLLAPSE_ALL,\n})\n","import React, { Suspense, useMemo, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Skeleton } from \"antd\"\n\nimport \"antd/dist/antd.css\"\n\nimport {\n  setTechFilters,\n  setTechOrder,\n  setCollapsed,\n  toggleCollapsed,\n} from \"actions\"\nimport suspend from \"suspend\"\n\nimport Header from \"./Header\"\n\nimport Projects from \"components/Projects\"\nimport Education from \"components/Education\"\nimport Experience from \"components/Experience\"\nimport Summary from \"components/Summary\"\nimport Skills from \"components/Skills\"\nimport Filters from \"components/Filters\"\n\nimport {\n  EDUCATION,\n  EXPERIENCE,\n  OTHER_PROJECTS,\n  SKILLS,\n  SUMMARY,\n} from \"filter_types\"\n\nimport \"./Resume.css\"\n\nconst fetchResume = fetch(\"./resume.json\").then((res) => res.json())\n\nconst suspendedFetchResume = suspend(fetchResume)\n\nfunction getGridColumns(section_filters) {\n  if (\n    section_filters.includes(EXPERIENCE) &&\n    section_filters.includes(SKILLS)\n  ) {\n    return \"3fr 1fr\"\n  } else {\n    return \"1fr\"\n  }\n}\n\nconst NonMemoResume = () => {\n  const resume = suspendedFetchResume()\n\n  document.title = resume.contact.name\n\n  const {\n    tech_filters = [],\n    section_filters = [],\n    // section_order = [],\n    collapsed = false,\n    tech_order = [],\n  } = useSelector(({ filters, collapsed: c }) => ({\n    ...filters,\n    collapsed: c,\n  }))\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!Object.keys(tech_filters).length && resume.active_tech_filters) {\n      dispatch(setTechFilters(resume.active_tech_filters))\n    }\n\n    if (!tech_order.length && resume.tech) {\n      dispatch(setTechOrder(resume.tech))\n    }\n    if (!Object.keys(collapsed).length) {\n      const newCollapsed = {}\n      resume.experience.forEach((job) => {\n        newCollapsed[job.id] = job.collapsed || false\n        if (job.projects) {\n          job.projects.forEach((project) => {\n            newCollapsed[project.project] = project.collapsed || false\n          })\n        }\n      })\n      resume.other.forEach((project) => {\n        newCollapsed[project.id] = project.collapsed || false\n      })\n\n      dispatch(setCollapsed(newCollapsed))\n    }\n  }, [collapsed, resume, dispatch, tech_filters, tech_order])\n\n  const collapseCallback = useMemo(\n    () => (id) => dispatch(toggleCollapsed(id)),\n    [dispatch]\n  )\n\n  const section_mapping = {\n    [EDUCATION]: (\n      <Education\n        filters={tech_filters}\n        schools={resume.education}\n        key=\"education\"\n      />\n    ),\n    [EXPERIENCE]: (\n      <Experience\n        filters={tech_filters}\n        experience={resume.experience}\n        projects={resume.projects}\n        sections={section_filters}\n        collapsed={collapsed}\n        collapseCallback={collapseCallback}\n        key=\"experience\"\n      />\n    ),\n    [OTHER_PROJECTS]: (\n      <Projects\n        filters={tech_filters}\n        projects={resume.other}\n        collapsed={collapsed}\n        collapseCallback={collapseCallback}\n        key=\"projects\"\n      />\n    ),\n    [SKILLS]: (\n      <Skills filters={tech_filters} skills={resume.skills} key=\"skills\" />\n    ),\n    [SUMMARY]: (\n      <Summary filters={tech_filters} summary={resume.summary} key=\"summary\" />\n    ),\n  }\n\n  return [\n    <Header key=\"header\" contact={resume.contact} />,\n\n    <Filters key=\"tech_filters\" />,\n    // ...sections,\n    section_filters.includes(SUMMARY) && section_mapping[SUMMARY],\n    (section_filters.includes(EXPERIENCE) ||\n      section_filters.includes(SKILLS)) && (\n      <div\n        key=\"resume-container\"\n        className=\"resume-container\"\n        style={{ gridTemplateColumns: getGridColumns(section_filters) }}\n      >\n        <div className=\"left-column\">\n          {section_filters.includes(EXPERIENCE) && section_mapping[EXPERIENCE]}\n        </div>\n        <div className=\"right-column\">\n          {section_filters.includes(SKILLS) && section_mapping[SKILLS]}\n        </div>\n      </div>\n    ),\n    section_filters.includes(OTHER_PROJECTS) && section_mapping[OTHER_PROJECTS],\n    section_filters.includes(EDUCATION) && section_mapping[EDUCATION],\n  ]\n}\n\nconst Resume = React.memo(NonMemoResume)\n\nconst NonMemoResumeRetriever = () => {\n  return (\n    <Suspense\n      fallback={\n        <div>\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n          <Skeleton active />\n        </div>\n      }\n    >\n      <Resume />\n    </Suspense>\n  )\n}\n\nexport default React.memo(NonMemoResumeRetriever)\n","import {\n  SET_SECTION_FILTERS,\n  SET_TECH_FILTERS,\n  SET_TECH_ORDER,\n} from \"../actions/types\"\n\nimport * as types from \"../filter_types\"\n\nconst section_order = [\n  types.SUMMARY,\n  types.SKILLS,\n  types.EXPERIENCE,\n  types.OTHER_PROJECTS,\n  types.EDUCATION,\n  types.PROJECT_BLURBS,\n]\n\nconst INITIAL = {\n  section_order,\n  section_filters: section_order.filter((s) => s !== types.PROJECT_BLURBS),\n  tech_order: [],\n  tech_filters: [],\n}\n\nexport default (state = INITIAL, action) => {\n  switch (action.type) {\n    case SET_SECTION_FILTERS: {\n      const { filters: section_filters } = action.payload\n      return {\n        ...state,\n        section_filters,\n      }\n    }\n    case SET_TECH_FILTERS: {\n      const { filters: tech_filters } = action.payload\n      return {\n        ...state,\n        tech_filters,\n      }\n    }\n    case SET_TECH_ORDER: {\n      const { order: tech_order } = action.payload\n      return {\n        ...state,\n        tech_order,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  SET_COLLAPSED,\n  TOGGLE_COLLAPSED,\n  EXPAND_ALL,\n  COLLAPSE_ALL,\n} from \"../actions/types\"\n\nconst INITIAL = {}\n\nexport default (state = INITIAL, action) => {\n  switch (action.type) {\n    case SET_COLLAPSED: {\n      return action.payload\n    }\n    case TOGGLE_COLLAPSED: {\n      return { ...state, [action.payload]: !state[action.payload] }\n    }\n    case EXPAND_ALL: {\n      return Object.keys(state).reduce((acc, s) => {\n        acc[s] = false\n        return acc\n      }, {})\n    }\n    case COLLAPSE_ALL: {\n      return Object.keys(state).reduce((acc, s) => {\n        acc[s] = true\n        return acc\n      }, {})\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import { combineReducers } from \"redux\"\nimport filterReducer from \"./filter_reducer\"\nimport collapsedReducer from \"./collapsed_reducer\"\n\nconst rootReducer = combineReducers({\n  filters: filterReducer,\n  collapsed: collapsedReducer,\n})\n\nexport default rootReducer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport reduxThunk from \"redux-thunk\"\n\nimport \"./index.css\"\nimport Resume from \"./components/Resume\"\n\nimport reducers from \"./reducers\"\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore)\n\nconst store = createStoreWithMiddleware(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Resume />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}